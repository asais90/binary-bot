module.exports = {
  "3d52a6d8fedcc48a65297c07bf5f7e3e41aab5aa": "Logic",
  "3edf0df49942da6d11a1a217e4d3af4a5a8e64f2": "Math",
  "c3328c39b0e29f78e9ff45db674248b1d245887d": "Text",
  "a1fffaaafb7cc996685bceb829c053cc4f7de43d": "List",
  "19de69cb601f53a4ea7af22a65c71ae63251365c": "Variable",
  "2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483": "Functions",
  "66639f7d455dd71faa9147f5d69e5ce885d8bebd": "Binary",
  "0ba66deaab2f2cd3b0793d03f600ee2b8f577fbc": "Trade Definition",
  "753cb2a65ee92d0f86eba6da481d1f1ad1d933d8": "Trade Types",
  "f94510322ecd9b3a2af67a10bd51ecc4ac6a24e7": "Up/Down",
  "0186aa73a1b75fa8f0eb98bbd9ad01102bb09ec1": "Touch/No Touch",
  "1c4f7176f1358919ae0299276c8d93d700bc4822": "In/Out",
  "9c7960c6b11d35ac9d6cdc1ebaad3af43b2065c5": "Asians",
  "2260ce49306460c8a2ef501939f29ad6ddd4e934": "Digits",
  "99207aee80dbcd40bd3c19c270a37c5eed12054a": "Trade Block",
  "9201c6ac624e98e168e6ccddbcd5a9b5cdff06b3": "Before Purchase",
  "44ab9a87268d3fd74040ed0b55c04f83294cfdef": "During Purchase",
  "c415c9399b7ae7285d2c1c880a6a0aa18f62ff8c": "After Purchase",
  "4fa8cc860c52b268dc6a3adcde7305e9415db5bb": "Tools",
  "548f449b63ff41eaaff5a2d679ffa56b2015fc20": "Misc.",
  "8cf71374fa095a64b5295b672daef8507ec7be6a": "Indicators",
  "d55369eede07dd2ab46a239e3c464ed09429a8a4": "Select a Tour",
  "e52e5e6cd50ef4de30d8a4fafbbfab41180cc200": "Welcome!",
  "2473e96bc614a911821242119918a241a41836d6": "Introduction",
  "6e78c91f5a05fc0d4f1a787d38e3d6fe2f856d46": "Log out",
  "f7c400ed695f898b8ee9d21664aa17b5bb693828": "Log in",
  "612e12d29278b5519294bc25cdaddffec6d0f1c6": "Results",
  "12b71c3e0fe5f7c0b8d17cc03186e281412da4a8": "Summary",
  "d847919a30d31c0be624087f3370492b3fdf80c6": "No. of runs",
  "1e5e614c900bd1584f0bb286450d6386955b486a": "Total Stake",
  "03969004b50f3f14cd77e318eaaca1945c128ed4": "Total Payout",
  "5405a1f68d262cc4d6f2b8dc93382afe6cf31778": "Total Profit/Loss",
  "90eef613042c5a51f542421065b68b886d473807": "Balance",
  "597b1092b35773a3b65fbcb4e6424c2bcc006dd1": "Trades",
  "b7baa1d40c4ea29afc9098732bffee2a861a6c44": "Number",
  "db1c784524e1b54011a95823026161f7c8517fe0": "Reference",
  "74751e67c3e1010c343095eaf543e7cb21ced2ef": "Trade Type",
  "6541776503f0f949109cde78e6634d07d3528cd3": "Entry Spot",
  "77bcdf0da628448afd03ab5259f31f56c9071ca6": "Exit Spot",
  "257d4c5a3f637e1a35bfc26330dd3ebee92f5dd0": "Buy Price",
  "8875c6d210e37a0772b7d1a37a48d345c90440d8": "Final Price",
  "772fbced18230220d2d9be1456be16fc1b271d25": "Profit/Loss",
  "18d76188e5c5d9df16ea3b7375c0da13c4fa8756": "Load block file",
  "56bb242d8211b81fb557f03bce8ef4c3dd4bc736": "Block file",
  "08548ce1ad20fb84564db0c018ddbc067d8bb631": "Save blocks as",
  "a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867": "Filename",
  "bf33cc2e57180686002e873efb1564c214405c77": "Save As Collection",
  "efc007a393f66cdb14d57d385822a3d9e36ef873": "Save",
  "608061fb5aab975013fa70c5c814a1d8ba30c152": "Trade More Efficiently Than You Ever Thought Possible",
  "e4ce8dc3e416e69262ba642dc57d3975d6616980": "Interested in automating your preferred strategies for trading binary options?",
  "f261237ca8beec6f77b76c4121feb8da22818c56": "Binary Bot is our leading-edge programming tool which allows you to build trading apps with a simple “jigsaw puzzle-like” drag-and-drop function.",
  "f6c85c68616eeaaa15fcd53fdc52f6eb5c886357": "Dream up any number of binary options trading bots, from incredibly simple formulas to vastly complex algorithms. Then let them trade for you, even while you sleep.",
  "e6906a0d1c28b202f9bd49da4a6abbddca57399a": "Best of all, once you’ve built a bot, we can help you sell it to fellow traders in the",
  "1dd0cf79c572bcdbdfabbd54ee95710a21234d73": "Binary.com Shop",
  "abeef9a35ae6256796ba2462e4f64d308de42359": "Receive 80% of the sales revenue from every purchase of your bot in our app store.",
  "104f798e4ad21ffd30587ecac37a08a981a80474": "A basic background of programming is required to work with Blockly and therefore Binary Bot. You can find good material to get started and build your computational thinking skills here:",
  "e9d9b7307276b8a24685291fc134cbff636cab5b": "Learn Programming with Blockly",
  "4aaa021babcace3ae5f45193e347ce85b102c9e2": "Computational thinking and programming using blockly",
  "c9682cd9c0d26c6a70d2fd02ab46f490ad8b3335": "Computational Thinking Course",
  "f3aba0f8c31987cb145508d84e29ee64e7ea2794": "Or only the",
  "0606f0b7763ee6e8094a3dab7873d34c08fd3670": "Begin Building a Bot Now",
  "221acaf3a0290adafe08cdcb8c66121c73d8b4a3": "Need further assistance?",
  "4832e45812a2724f16a15f9ae87adfc8ae4168cf": "Contact us",
  "9bb396940adb9705fe57eba6ea8b578e6aafa792": "Payout",
  "78d7103a319e808455d397513279d99f3b3f3768": "Stake",
  "bbb930cc426507ed3f6b7c343c75dd0e041494b7": "statement",
  "e6e886cdcdefeb6d3edb4c31bed06dd183ac4153": "ask price",
  "50e72909992bdc37c7c07769d1b7efac5e52874c": "payout",
  "ecb5ba7044417916ba12de5fa9e6fccac3e5d475": "profit",
  "c980b910204c7babdffe8ff3f7e755f30133383c": "contract type",
  "a726c6955157f1b8b92f9932652434a7150f80f8": "entry spot",
  "a66d5c7ef2c63dbc9a8f9e6ae4e2bc575e74a36e": "entry value",
  "7674920c033ca14277c577e19c037a6754d4fa80": "exit spot",
  "e8b8bd9f2eabc12875605a37c93e7f04a713fcb8": "exit value",
  "779455ee3bde8494d9629b353e17b19e92357ba8": "barrier",
  "37a5301a88da334dc5afc5b63979daa0f3f45e68": "result",
  "4973f4c599d5f42cf7bde52d66c3ed8ef77accb1": "Win",
  "12e24a7d8ac40579e8a0aef4869288afe7ed6745": "Loss",
  "563339f82447b4e758ad76d5a0b63b5698594fba": "Rise",
  "5c1ae82c29543ac887703776bf3da2c7dcce683d": "Fall",
  "2fc096bb7b6596ab243d0286c9f43fdf2b9b406d": "No Change",
  "ecb252044b5ea0f679ee78ec1a12904739e2904d": "string",
  "53b0a1b2fadf4e040cdc2155a7340de24aca93cb": "number",
  "bc74f4f071a5a33f00ab88a6d6385b5e6638b86c": "green",
  "4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9": "blue",
  "96de5543d183d7de52ac5fa21c46fc811f673f89": "yellow",
  "78988010b890ce6f4d2136481f392787ec6d6106": "red",
  "062787aa328047e189774b3703d983b83938f6e9": "Higher",
  "b91eed4b7a80cd9572a27e65ebdff9caa4b3b9a4": "Lower",
  "e3f139abb7a549a1210b36f7dbf89215ad6c9902": "Touch",
  "7d7932bcc2e262ae98cf09dc5445130fb3881769": "No Touch",
  "a16814a48ec58c2e24ba224a80921a5c02361abe": "Ends In",
  "391d02cd75ebcd6ed26f5f45ddf7d40bf13e9dc5": "Ends Out",
  "534ec5da4e82ec419abc170e1a8448f55a01664f": "Stays In",
  "98cbe1998effd8b1a8aefdcc538573055e99a5f5": "Goes Out",
  "93d13bad1d2c2841db127cb70cc35bfc98059fc9": "Asian Up",
  "c098658ce3d3a258e4d155949a60072966b36db7": "Asian Down",
  "ee2dbd5d6d82d0833069b07e7dd2848d3bf4d83a": "Matches",
  "8444b7ce28bbc3443cc5cf73359b8353989b2a4b": "Differs",
  "9e767ad03e5547f251044e0724dc1d9f3e75aeed": "Even",
  "dc28f5f3c65ec611f0f30022650d24382d27448e": "Odd",
  "18a63f5512afb5573e5b44deba78d629f0635317": "Over",
  "2a268b89b83f8cb38ea48e46e93dd8840db512f9": "Under",
  "53adebdc2b1cbbedb56395b19a73fe47b87cc554": "Ticks",
  "5fb1db527825d2996e37c655e5dec49d4da80c09": "Seconds",
  "092f99ea11a34a8490e7a767a83a42fc45634f82": "Minutes",
  "9e25a34e635a123f8958bbe26e7c4843278597fb": "Hours",
  "f7de1f66f0979667da275b7e8996e805395025a1": "Ends In/Out",
  "a431deecd4c2258097adae418d496fe9a8179fee": "Stays In/Goes Out",
  "518c0b5e4f32706ac0822f5f3c20e23f66045415": "Expected non-empty array, given:",
  "ac5c071aab82d3c9bef52be71951a796e4cabe22": "Expected candle object, given:",
  "897c7741dd9674730cb8304a4f5e241e4c40d6f5": "Expected tick, given:",
  "93576240acc9ffcd3e6a0aa259c7eb32f4c34c88": "must be a number, given:",
  "ccd81e42a5e36c2b44f7085b3d3997a4fa513a9e": "cannot be zero.",
  "629777b7d4d610ace6dee24442730f27d7d0853e": "File is not supported:",
  "e99811bd3b1ad17e74614060ecb180602be35ad6": "Logged you out!",
  "5506eb6161a07356d96e91770d25d5a0f22200ef": "Conditions",
  "8b70c504aa09cadfdc4baac6909b492d9d63db71": "Purchased",
  "e4458464df6cbb8da1134875ba51519c5d244d9f": "Blocks must be inside block holders, main blocks or functions",
  "a479c9c34e878d07b4d67a73a48f432ad7dc53c8": "Download",
  "af145748c9cf765a3b059eec20cb1dbb899297d8": "Blocks are loaded successfully",
  "da162a909c2981ed318d23cd9a6be1d66e0a8400": "Unrecognized file format.",
  "c3c49d3e838c8fe813d360aea7dc6b792948afde": "Markets",
  "11ee9c5d534cc8d22651092222b532917594161a": "Minimum duration is",
  "5283ac04c9a8ba8a937d1edb4ba986aeefce8bf1": "Number of ticks must be between 5 and 10",
  "ace1342bc3720b77ce510b93074041e7386d209e": "Expiry time cannot be equal to start time",
  "fed3e7bd6696fb97a12d720845ab5388456bfc3b": "Prediction must be one digit",
  "9bec3db35af828e22b2b5e9702a359fa011b03e9": "Trade Type blocks have to be added to submarket blocks",
  "b3214afd299cfa3952efc8d8853c7b5a7f340405": "does not support category:",
  "4166e06fcdc703410a1edb28a7bcea9ed0a4bfdb": "Allowed categories are",
  "ab1e8d2323be79c5b0403065b088f428778c7605": "must be added inside the trade block",
  "762d334c830574af86dd1fc75ce6003b0e57548c": "Submarket blocks can only accept trade type blocks",
  "6e3674eaa8061ce7f428a6fa097209b1de96901d": "must be added to the condition block",
  "ff55a11f2a8ef76846f24cb60cb49e118f5552c3": "must be added inside the before purchase block",
  "61dd25992a554b74a613971ba52e49d66b2966ee": "must be added inside the during purchase block",
  "62cef231185ce9362e94e3fd38309e9a73f11b73": "must be added inside the after purchase block",
  "aac1569ccf6b1a11b0ad0fbefdb9ffc777b4c733": "Click to select",
  "1c89b0a9ffe86e1db3b9f926d215e57f5a7b445d": "Welcome to the introduction to the binary bot, we will go through the basic steps to create a working bot. Skip this tutorial by clicking on the <b>X</b> button. Skip each step by <b>Right Arrow (",
  "401ddc8376746eceaddf4dba5b8c91dc6d5f6fbe": ")</b> on the keyboard.",
  "b220ddf901eb3413d07d77926409ca33b10244e8": "This is where you can define your blocks.",
  "be3f7ea023ba358f6fa6bae192d1e8d6cc1f340e": "You can see the <b>main blocks</b> (Step 1, 2, 3 and 4) already added to the workspace.",
  "2a777c3d0de969f488290884ecc01184e01d1a8f": "You cannot add/remove main blocks, also you can move them to a desired place in the workspace. Only one block can exist for each step in the workspace.",
  "f4bad39e0da47ce1f413083ec703c9bdb4e821bc": "To start pick a <b>symbol</b> block from markets. Some steps like this one don't have the <b>Next step</b> button, therefore you need to follow the instructions to go to the next step, (in this case picking a symbol from left should lead you to the next step.)",
  "befc05c5b14b4c155cea1552fc019fc100adeddb": "Great! Now add it to the <b>Define Trade</b> block.",
  "25d5b0a626412f2ba48c10ec8a56c9efc62b5a49": "Alright! Now pick a <b>trade type</b> block.",
  "a8ce204c869e6df24277611290801e35b787c870": "OK! Now add it to the symbol you added in the previous step.",
  "d518cd463b95acf6b2b42414c41f19408521cd00": "Very good! It's time to add the options needed by the trade type block, pick a number",
  "e20d6b63e449cc63246eb171e6d4368c060a60f5": "from the Math menu",
  "80f10315585e12fc0dd2f7b7faa8a09a8034b79c": "Click on the number block to edit its value",
  "fc8045d8d70d2ae8c31c79b57623fc59609135e7": "change the value to 5 and add it to the <b>ticks</b> field of the trade type block",
  "6e317f95b71981900a70cb465671f1021bbbf5a8": "OK, Now add all remaining options to the trade type block",
  "282ea251bdfda29ddf988b813e77ebb65c7d6c0d": "That's it, now you have a complete trade block with its options. It's time to define a strategy",
  "857317010a7ce5beb986245e16df89ea1107f2e9": "This is a <b>before purchase</b> block. All the blocks you put in here are run for each and every tick received.",
  "2241114380da23680a3d0c54949ebff29b551107": "You can some basic blocks for ticks/candle analysis and also payout/ask price to check the price before doing purchase.",
  "d807900b7f73755ca95b24429d76f4a2116ca7b9": "We'll now create our strategy by adding a single <b>purchase</b> block. Please pick a purchase block from the toolbox.",
  "49c6a22fd28c88b4442a50b979f47b4d9e92e161": "Now add it to the before purchase block.",
  "4a362e853d0afc9cca5f580cc02999ee0ea12f84": "Nicely Done! The purchase block initiates a purchase defined by its dropdown list, e.g. if your trade type block is of <b>Rise/Fall</b> type you will have <b>Rise</b> and <b>Fall</b> options on the purchase block to select from.",
  "f473d84a07518a15f65f3727eb52c9d5c18a44c2": "A before purchase block consisting of only a purchase block means to purchase as soon as the first tick was received.",
  "b8c5e7eaff26dd923ad6801e07482d40bc20bfc2": "After a purchase was the bot waits till the purchase is completed, and then gives the control to the <b>after purchase</b> block",
  "11b3fa5078b3714d73355fd82e135b7faa84496c": "Same as the before purchase block, the <b>after purchase</b> block can have multiple blocks defining its functionality. The after purchase block defines what to do when the previously purchased contract is finished.",
  "f426f2ed809156b5948eeedb366e176f61f2044c": "A <b>Trade Again</b> block creates a new trade and exits from the after purchase block. Now pick a Trade Again block.",
  "0d4f202c28f60e4ec6e3092ad3c9b4b8420c9f87": "Now add it to the after purchase block",
  "86aa77e65de8324cd6d0b7f9d5b7b74546786185": "Excellent! The <b>Trade Again</b> block starts a new trade immediately after the previous contract is finished, therefore creates an infinite loop which goes on and on until the Trade Again block isn't called e.g. in a logic block which its trade type is unmet.",
  "70c9ae0969c05b75bb0e837567153a3b5ce1d0aa": "OK, this's it. Now we have a working bot which buys a contract after the first tick and then creates another trade which is exactly the same as before.",
  "505f22f919520c4cd40739be12fb611c7d8b15d8": "You can use Ctrl + -/+ to zoom out/in the blocks",
  "f49c79f5e096ac6909e0fc364980583fd20c46b6": "You can choose the account you want by the <b>Account</b> dropdown. If you cannot see the dropdown please login using the <b>Login</b> button above. Please make sure to use Virtual Account tokens for testing.",
  "cd69f8cbfeeb5db3db9743b4633f2290a456bd02": "You can save/load your blocks using these buttons. You can also save a single block by right clicking on it and then clicking Download.",
  "afdbbf9e4980ea6636358d83fad6bd56447ccc4b": "If you removed a block by accident you can always undo/redo your changes using these buttons or Ctrl+Z for undo and Ctrl+Shift+Z for redo",
  "289e2c8c1e5261caf305fd0f86c307d4b3e6909e": "This button will open the summary panel.",
  "07f1405a51afc85bbb5a2bd172e9bb10ef7cbaa8": "You can reset your blocks to their initial state after load or run.",
  "0350a7131fa13a57dc525910b2b5f691f10ae33f": "At last! It's time to run the blocks we created. You can run/stop the blocks by clicking on the run/stop buttons. Please make sure you have chosen a Virtual Account before doing experiments.",
  "0d2d2ef95065f4155c72f8faccad6ab85373628a": "Welcome to the binary bot",
  "27f752f8ca631f5005555a1b49c14c57afab272f": "a blockly based automation tool for binary.com trades",
  "7d144a402b0ae170d6a5e3eea22926e25835e5a1": "Skip this tutorial by clicking on the <b>X</b> button",
  "dde27b8972ae198696283c4c2b9978b09e889884": "Skip each step by <b>Right Arrow (",
  "16c53af22e28d82ae4837c118147dd1cc6e7b2d8": "The blocks you put in here will create a binary bot code.",
  "bea4722929758a3b13e4b7337a3b1c1847794062": "You can then execute using the run button.",
  "cb5ec2c49b4eb83efeef0acf765d51003e0059af": "You can pick blocks from here to add to the workspace",
  "832de13f8c6c6b3374ff2f2b48061902b33b0ad5": "Press Ctrl + -/+ to zoom out/in the blocks",
  "129b4372ce84996fae10be0a001a0ca53d593737": "You need to login before running the bot.",
  "719c817f94ff88a1f89650ba01933e35bc7d0ceb": "Use these buttons to save/load your blocks",
  "18c372be48fb3fb91352cc721df2d256fea4e4e8": "Use these buttons to Undo/Redo changes to your blocks.",
  "3f71217a42b6920b422b3d9a6b37c5d39cdbbf19": "Open the summary panel.",
  "7f9acbb6190e0bca7980c39a468d49677d55f190": "Reset the blocks to their initial state.",
  "d202d8ee13996bc1811c4ad42a4902070213f88f": "Use the run/stop buttons in this menu to run or stop your blocks.",
  "e8077186267c1038681326ccb5ee9e7f97f8d8e5": "Good Luck!",
  "a5853df5728c4e8b0bb050c1ecee8314a6605345": "Blocks in here have no effect!",
  "d072c2ceeb5c1217722d14c74de7aeab945b4215": "Put your blocks in here to prevent them from being removed",
  "cd5f85b6f187605f82386eacd680f93820af8d11": "Result is",
  "1e38ce3d180cefae485a6986ca7c67841e30376f": "True if the result matches the selection",
  "130859d75b98316e103257c1f3c21832b3e80dc4": "Contract Details",
  "011b5c3886f99f18d9239534f3423849fd75450b": "Returns the list of details for the finished contract",
  "ceac916ff355db07990f3fe594931e375d03bb8f": "(4) things to do after purchase is finished",
  "ccf476d7438b63183405e945a10a1d9aca2b9a2b": "This block decides what to do when a purchased contract is finished",
  "5098e2bcc96ee227983c9f7eeddfd226c220ca00": "Contract Detail:",
  "251c830f8f869e0887e8b4dc4c30ba1738c7097e": "Reads a selected option from contract details list",
  "dc3f26688f5ef436999ab59f699bcda077e65738": "Contract Result",
  "d645c153b95989901238e9e8b7f9bac49abd053d": "Returns the result of the finished contract",
  "b3b543c80063a116ced4965d8537b7b62d14c0b7": "Trade Again",
  "a1eeb7c1e92e9a5d9323ed8ebd7ca7ffed8b0232": "Runs the trade block again",
  "da3105e38c42a481ad7230ed393b0e12bebe9c4f": "Ask Price",
  "343fda69c73b78b84967055aae97f790c422adfd": "Ask Price for selected proposal",
  "e4bed3e67e58b2334ee4b9c6ce59ac7a95d80aaf": "Direction is",
  "ad47561efb1dcbd7246d9b64487f615647fda036": "True if the direction matches the selection",
  "05bef508aadd62bf3967dcf67d769da296f19989": "Tick Direction",
  "21bfc78607d3a64de767a6677d1db42156d5039d": "Returns the tick direction received by a before purchase block, its value could be 'up' if the tick is more than before, 'down' if less than before and empty ('') if the tick is equal to the previous tick",
  "15635817eb91f7b0c1c84149b482491e0cc5f384": "(2) things to do before purchase is made",
  "8ee54ad5dcb2ec7a856487ea5bb324381394987b": "This block decides what to do each time a new tick is received",
  "d5fde4c9d5edf660f760fc226df4d2678d3334ab": "Candles List",
  "95e552a40d3446c96905cd3ec7e3d123d0246ce8": "Returns the candle list",
  "5e9023e299575f2bc81242b931c10019b63f407a": "Candle Values",
  "cd8cdf3d47e921c8a72addae9269e66041d417c5": "Returns a list of the selected candle values",
  "87da93a46d143f6019979b3548414d9d7adabb35": "Payout for selected proposal",
  "160f06d4799c85021a810f68c5b517eea37a2737": "Purchase",
  "4c2fdde3d9c1950498ed263d6ce21d4bf3d0800b": "Purchases a chosen contract.",
  "852b438f91ad9eb2cdd84419a675a216d543c687": "Read",
  "1481d0a0ceb16ea4672fed76a0710306eb9f3a33": "latest",
  "c5abcb64d530ea5805e6b4072a080ee335824870": "Read a field from a candle selected by index from the last candle, 1 as the latest and 2 as the candle before that.",
  "ef5980d8dc0fcbae8dce60ae424d41416a4badc7": "from Candle",
  "b1bf745777b8e274f75dca1b1e1870ea734d928b": "Read a field from a candle (received from Candles list)",
  "e04b522218a181cf0223042dd18ae08dcc22d8d3": "Last Tick",
  "6ee445fc253a55c9ed54c009c3f020ac65200d80": "Returns the tick value received by a before purchase block",
  "ebffc758056e6b2fc2af99af17fbc6853e5d3583": "Ticks List",
  "17649cac8739adcae95e641f794880272ad33bd1": "Returns the list of tick values",
  "ca5586bdb5bdc1a2c0baf53ed0ecd21fafabebe7": "Sell is available",
  "03bad10717e183b24829baf483dc715e1a44bf7b": "True if sell at market is available",
  "2721f74d9a7356adb7110cd220b7c2c7d26565dc": "(3) things to do when trade is in progress",
  "40c937036a5d3675969a56e8ecaebec4cb71c47c": "Sell at market before a trade is finished",
  "579607dc4f989ce2b94b558431666a0ab07ac1f3": "Sell at market",
  "e20afd5cf3811a42071c9a312abb2afdad4c590b": "Sell at market.",
  "4712cbff8e92822fc960ef9c0197293a19675eae": "Sell profit/loss",
  "df817b48c7a076561b4f8bedc52d65d2e351ab52": "Returns the profit for sell at market.",
  "802dc02469ae51067ca620ff57dfb5bdb3e524ac": "Balance:",
  "c4ee8e12b2484cd5b47cdf00bfa2c50b83e91d3d": "Get balance number or string",
  "6c03ee54ad3a51fc92a1d69943e99667847705b6": "Notify",
  "a2d0c89fdfff3176efd4a443eb0f6607067b93e7": "Creates notification",
  "45ebd38f4c641ebf6f72be8c3a79dfa50cf9f20e": "Total Profit",
  "ffb465875e1ff2b49bcaa7c6b70965ffe39fa59d": "Returns the total profit",
  "bc528d26f66fe8c4aa4bb24ec9c99dff12c055e0": "No. Of Runs",
  "bea5756b18644ccfab01c1c0dbd6fa9db7103379": "Returns the number of runs since the beginning",
  "c67ded6b64019212eb2bc69afd761f5b3f626040": "Add sign to a number to make a Barrier Offset.",
  "2faeb5c01923c3cb6c031146ea23fbf43d72b526": "Candle Interval:",
  "9693aeaaf68e3929b59b79306feaa0a847d01192": "Duration:",
  "15edb47b74a0ecf67e8799087491cb5d6720ff00": "Payout:",
  "b66c8f6ee4d73f0dba18e50ae286261a97f3bf56": "Currency:",
  "6ef144e9a6b6667b6f5762048f912dc64c41fb7e": "Barrier Offset:",
  "a6dce6b3ea27cdc2deb6f38d5b17f01b2d7cb46e": "Low Barrier Offset:",
  "7b6c4800c92fc89b77fdb39901052847d12caf18": "Prediction:",
  "ea1bbda9ce5f289cf710c4e41e2768dda649f03c": "(1) Define your contract here",
  "8b16483603e47f5538547508aa218d2f522aeed5": "Use this block to choose markets and trade types.",
  "eabf5342bcb460c4f8261faa18695d851712614a": "Please login.",
  "30de51af8df6b6a7f6b6d26a113fa5e2eea54415": "Accepts",
  "cc7695342b437bfe37baba92b657b8ad21b350d8": "Chooses the symbol:",
  "d8fa8d3722cb6f0f86bb21d732458c050087ac8a": "A trade type has to be defined for the symbol",
  "994545e97a5f689a6768bb2d3295b8f3abe2ad84": "Synchronizes all trade purchases across all browser tabs",
  "f36bc5db1b0f1f4e605345225330fa0dd81e6689": "High Barrier Offset:",
  "450f7c5ae87fc05ec200be3b2aa09706c4d003af": "Provides the trade types:",
  "559f682cbda9fdf635263a782b7c6125ec4e745a": "All trade types are required",
  "4bd99f76f1104229744455d93df0ff76b9eeed58": "Exponential Moving Average",
  "d6a2a207343bd83aacdc80b579ff4419713a256e": "Input List",
  "170a28a9db6d27d7212fc6dc249434a57517e7bc": "Period",
  "ea615c6d6a74e25a6d2f1bc9980b46e73508c2eb": "Calculates Exponential Moving Average (EMA) from a list with a period",
  "a9842c95766da40bf4ea6ee263cb5a5985847763": "Simple Moving Average",
  "347775a293c14362d492f019e677c965be1d6e7d": "Calculates Simple Moving Average (SMA) from a list with a period"
}
;